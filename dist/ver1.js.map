{"version":3,"sources":["../server/ver1.js"],"names":["express","require","bodyParser","router","Router","use","json","urlencoded","extended","a","type","sender","receiver","data","text","get","request","response","setHeader","post","req","res","reqBody","body","message","resjson","slice","concat","console","log"],"mappings":";;;;;AAAA,IAAIA,UAAUC,QAAQ,SAAR,CAAd;AACA,IAAIC,aAAaD,QAAQ,aAAR,CAAjB;;AAEA;AACA,IAAIE,SAASH,QAAQI,MAAR,EAAb;;AAEA;AACAD,OAAOE,GAAP,CAAWH,WAAWI,IAAX,EAAX;AACAH,OAAOE,GAAP,CAAWH,WAAWK,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAX;;AAEA,IAAIC,IAAI,CACJ,EAAEC,MAAM,MAAR,EAAgBC,QAAO,OAAvB,EAAgCC,UAAS,KAAzC,EAAgDC,MAAM,EAAEC,MAAM,yCAAR,EAAtD,EADI,EAEJ,EAAEJ,MAAM,MAAR,EAAgBC,QAAO,KAAvB,EAA8BC,UAAS,OAAvC,EAAgDC,MAAM,EAAEC,MAAM,6BAAR,EAAtD,EAFI,EAGJ,EAAEJ,MAAM,MAAR,EAAgBC,QAAO,KAAvB,EAA8BC,UAAS,OAAvC,EAAgDC,MAAM,EAAEC,MAAM,mDAAR,EAAtD,EAHI,EAIJ,EAAEJ,MAAM,MAAR,EAAgBC,QAAO,OAAvB,EAAgCC,UAAS,KAAzC,EAAgDC,MAAM,EAAEC,MAAM,yIAAR,EAAtD,EAJI,CAAR;;AAOAX,OAAOY,GAAP,CAAW,sBAAX,EAAmC,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;AAC5D;AACAA,aAASC,SAAT,CAAmB,6BAAnB,EAAkD,GAAlD;AACAD,aAASX,IAAT,CAAcG,CAAd;AACA;AACH,CALD;;AAOAN,OAAOgB,IAAP,CAAY,SAAZ,EAAuB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;;AAEvC,QAAIC,UAAUF,IAAIG,IAAlB;AACA,QAAIb,OAAOY,QAAQZ,IAAnB;AACA,QAAIC,SAASW,QAAQX,MAArB;AACA,QAAIC,WAAWU,QAAQV,QAAvB;AACA,QAAIY,UAAUF,QAAQE,OAAtB;AACA,QAAIC,UAAU,EAAEf,MAAMA,IAAR,EAAcC,QAAQA,MAAtB,EAA8BC,UAAUA,QAAxC,EAAkDC,MAAMW,OAAxD,EAAd;AACAf,QAAIA,EAAEiB,KAAF,GAAUC,MAAV,CAAiBF,OAAjB,CAAJ;AACAG,YAAQC,GAAR,CAAYJ,OAAZ;;AAEAJ,QAAIH,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACAG,QAAIH,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACAG,QAAIH,SAAJ,CAAc,8BAAd,EAA8C,gDAA9C;;AAEAG,QAAIf,IAAJ,CAASmB,OAAT;AAEH,CAjBD;;kBAmBgBtB,M","file":"ver1.js","sourcesContent":["var express = require('express')\nvar bodyParser = require('body-parser');\n\n// var app = express();\nvar router = express.Router()\n\n// router.use('/', ()=> {console.log(\"2!!!\")})\nrouter.use(bodyParser.json());\nrouter.use(bodyParser.urlencoded({ extended: false }));\n\nlet a = [\n    { type: 'text', sender:\"Alice\", receiver:\"Bob\", data: { text: \"Why don't they have salsa on the table?\" } },\n    { type: 'text', sender:\"Bob\", receiver:\"Alice\", data: { text: \"What do you need salsa for?\" } },\n    { type: 'text', sender:\"Bob\", receiver:\"Alice\", data: { text: \"Salsa is now the number one condiment in America.\" } },\n    { type: 'text', sender:\"Alice\", receiver:\"Bob\", data: { text: \"You know why? Because people like to say 'salsa.' 'Excuse me, do you have salsa?' 'We need more salsa.' 'Where is the salsa? No salsa?'\" } },\n]\n\nrouter.get('/:user/:personInTalk', function (request, response) {\n    // console.log(request.body);      // your JSON\n    response.setHeader(\"Access-Control-Allow-Origin\", '*');\n    response.json(a)\n    // response.json({text: \"hello\"});    // echo the result back\n});\n\nrouter.post('/update', function (req, res) {\n\n    let reqBody = req.body;\n    let type = reqBody.type;\n    let sender = reqBody.sender;\n    let receiver = reqBody.receiver;\n    let message = reqBody.message;\n    let resjson = { type: type, sender: sender, receiver: receiver, data: message};\n    a = a.slice().concat(resjson);\n    console.log(resjson);\n    \n    res.setHeader('Access-Control-Allow-Origin', '*');\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n    res.setHeader(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n\n    res.json(resjson);\n\n});\n\nexport default  router;"]}